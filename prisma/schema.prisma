generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model usuarios {
  usuario_id        Int      @id @default(autoincrement())
  usuario_nome      String
  usuario_email     String   @unique
  usuario_senha     String
  usuario_nivel     String
  usuario_criacao   DateTime @default(now())
  usuario_alteracao DateTime @updatedAt
  perfis            perfis[]

  // Relação inversa (um usuário pode ter várias sugestões)
  sugestoes sugestao_melhoria[]

  indicacao_amigo indicacao_amigo[]
  usuario_tipo_emblemas usuario_tipo_emblema[]

}

model jogos {
  jogos_id          Int             @id @default(autoincrement())
  jogos_nome        String
  jogos_descricao   String          @db.VarChar(254)
  jogos_link        String
  jogos_url_img     String?
  jogos_autor       String?

  categoria_jogos   categoria_jogos @relation(fields: [categoria_jogo_id], references: [categoria_jogo_id], onDelete: Cascade)
  categoria_jogo_id Int
  createdAt         DateTime        @default(now())
}

model categoria_jogos {
  categoria_jogo_id           Int     @id @default(autoincrement())
  categoria_jogo_area_atuacao String
  jogos                       jogos[]
  categoria_jogo_icone        String
}

model emblemas {
  emblema_id       Int    @id @default(autoincrement())
  emblema_nome     String
  emblema_criterio String
  emblema_imagem   String
  emblemas_pontos  Int
  emblemas_status  String

  perfis perfis[]

  tipo_emblemas tipo_emblemas[] // ← relação 1:N
}

model perfis {
  perfil_id     Int    @id @default(autoincrement())
  perfil_imagem String
  perfil_cidade String
  perfil_pontos Int    @default(0)
  perfil_nivel  Int    @default(1)

  perfil_usuarios usuarios @relation(fields: [usuario], references: [usuario_id], onDelete: Cascade)
  perfil_emblemas emblemas @relation(fields: [emblema], references: [emblema_id], onDelete: Cascade)

  usuario Int
  emblema Int
}

model sugestao_melhoria {
  sugestao_melhoria_id        Int      @id @default(autoincrement())
  sugestao_melhoria_nome      String
  sugestao_melhoria_titulo    String
  sugestao_melhoria_descricao String   @db.VarChar(254)
  sugestao_melhoria_status    String
  // Relação com usuarios
  usuario_id                  Int
  usuario                     usuarios @relation(fields: [usuario_id], references: [usuario_id], onDelete: Cascade)

  tipo_emblema_id Int
  tipo_emblema    tipo_emblemas @relation(fields: [tipo_emblema_id], references: [tipo_emblema_id], onDelete: Cascade)
}

model tipo_emblemas {
  tipo_emblema_id       Int    @id @default(autoincrement())
  tipo_emblema_criterio String
  tipo_emblema_pontos   Int
  emblema_id Int
  
  emblema    emblemas @relation(fields: [emblema_id], references: [emblema_id], onDelete: Cascade)
  sugestoes_melhoria sugestao_melhoria[] // relação inversa opcional (1:N)
  usuario_tipo_emblemas usuario_tipo_emblema[]

}

enum StatusConvite {
  ENVIADO
  RECEBIDO
  CADASTRADO
}

model indicacao_amigo {
  indicacao_amigo_id              Int           @id @default(autoincrement())
  usuario_indicador_id            Int
  indicacao_amigo_email_indicador String
  indicacao_amigo_email_indicado  String
  status_convite                  StatusConvite @default(ENVIADO)
  data_indicacao                  DateTime      @default(now())

  usuario usuarios @relation(fields: [usuario_indicador_id], references: [usuario_id], onDelete: Cascade)
}

enum StatusTipoEmblema {
  BLOQUEADO
  DESBLOQUEADO
}

model usuario_tipo_emblema {
  usuario_emblema_id           Int               @id @default(autoincrement())
  usuarioId                    Int
  tipoEmblemaId                Int
  usuario_emblema_pontos       Int              @default(0)
  usuario_emblema_status       StatusTipoEmblema @default(DESBLOQUEADO)
  sugestao_id                  Int?              // Adicione esta linha para relacionar com a sugestão

  usuario      usuarios         @relation(fields: [usuarioId], references: [usuario_id], onDelete: Cascade)
  tipoEmblema  tipo_emblemas @relation(fields: [tipoEmblemaId], references: [tipo_emblema_id], onDelete: Cascade)
  sugestao     sugestao_melhoria? @relation(fields: [sugestao_id], references: [sugestao_melhoria_id])

  @@unique([usuarioId, tipoEmblemaId])
}
